#!/bin/bash

function exit_lab() {
	case $1 in
	0)
		exit 0
	;;
	-1)
		echo "критическая ошибка, отсутсвует файл" >&2
		exit -1
	;;
	-2)
		echo "критическая ошибка, неверное число аргументов" >&2
		exit -2
	;;
	-3)
		echo "критическая ошибка, введено не целое число" >&2
		exit -3
	;;

	-4)
		echo "критическая ошибка, деление а ноль" >&2
		exit -4
	;;
	-5)
		echo "один и тот же файл!" >&2
		exit -5
	;;
	*)
		exit $1
	;;
	esac
}

case $1 in
"calc")
	if ! [ -f "calculator.sh" ]
	then
	exit_lab -1
	fi
	if ! [ $# == 4 ]
	then
	exit_lab -2
	fi
	reg='^[+-]?[0-9]+$'
	if ! [[ $3 =~ $reg && $4 =~ $reg ]]
	then
	exit_lab -3
	fi
	reg2='^[+-]?[0]+$'
	if [[ $2 == "div" && $4 =~ $reg2 ]]
	then
	exit_lab -4
	fi
	source ./calculator.sh
	operation=$2
	arg1=$3
	arg2=$4
	calculator "$operation" "$arg1" "$arg2"
;;
"search")
	if ! [ -f "search.sh" ]
	then
	exit_lab -1
	fi
	if ! [ $# == 3 ]
	then
	exit_lab -2
	fi
	source ./search.sh
	file=$2
	reg=$3
	search "$file" "$reg"
;;
"reverse")
	if ! [ -f "reverse.sh" ]
	then
	exit_lab -1
	fi
	if ! [ $# == 3 ]
	then
	exit_lab -2
	fi
	source ./reverse.sh
	file1=$2
	file2=$3
	if [ $file1 == $file2 ]
	then
	exit_lab -5
	fi
	reverse "$file1" "$file2"
;;
"strlen")
	if ! [ -f "strlen.sh" ]
	then
	exit_lab -1
	fi
	if ! [ $# == 2 ]
	then
	exit_lab -2
	fi
	source ./strlen.sh
	str=$2
	strlen "$str"
;;
"log")
	source ./log.sh
	log
;;
"interactive")
	if ! [ -f "interactive.sh" ]
	then
	exit_lab -1
	fi
	source ./interactive.sh
	interactive
;;
"help")
	if ! [ -f "help.sh" ]
	then
	exit_lab -1
	fi
	source ./help.sh
	help
;;
"exit")
	exit_lab "$2"
;;
*)
	echo "вы ввели неверно первый параметр" >&2
;;
esac
